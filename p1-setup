#!/bin/sh

########################################################################
if [ -z "$script_dir" ]; then
  echo 'do not run this script directly!'
  echo 'this script is part of run.sh'
  exit 1
fi
########################################################################


########################################################################
BACKUP_FILE="${script_dir}/backup.tar.xz"
BACKUP_TRANSFORM=s/^/$(date +%Y-%m-%dT%H_%M_%S)-pxe-server\\//

do_backup() {
    tar -ravf "${BACKUP_FILE}" --transform="${BACKUP_TRANSFORM}" -C / "$1" >/dev/null 2>&1
}


########################################################################
echo -e "\033[36msetup variables\033[0m";


########################################################################
########################################################################
. "${script_dir}/p2-include-var"
. "${script_dir}/c2-custom-var"


echo
echo -e "${KERNEL_MAJOR}.${KERNEL_MINOR} \033[36mis kernel version\033[0m";
echo -e "${INTERFACE_ETH0} \033[36mis used as primary network adapter for PXE\033[0m";
echo -e "${IP_ETH0} \033[36mis used as primary IP address for PXE\033[0m";
echo -e "${RPI_SN0} \033[36mis used as SN for RPi3 network booting\033[0m";
echo

if [ -z "${IP_ETH0}" ]; then
    echo -e "\033[1;31mIP address not found. please check your ethernet cable.\033[0m";
    exit 1
fi

if [ -z "${IP_ETH0_ROUTER}" ]; then
    echo -e "\033[1;31mrouter IP address not found. please check your router settings.\033[0m";
    exit 1
fi

[ -n "${SRC_MOUNT}" ] && sudo umount -f "${SRC_MOUNT}" >/dev/null 2>&1;
[ -n "${SRC_MOUNT}" ] && sudo mount "${SRC_MOUNT}" >/dev/null 2>&1;


########################################################################
handle_chrony() {
    ####################################################################
    ## chrony
    grep -q mod_install_server /etc/chrony/chrony.conf 2>/dev/null || {
        echo -e "\033[36m    setup chrony\033[0m";
        do_backup etc/chrony/chrony.conf
        cat << EOF | sudo tee /etc/chrony/chrony.conf >/dev/null
########################################
## mod_install_server
allow

server  ptbtime1.ptb.de  iburst
server  ptbtime2.ptb.de  iburst
server  ptbtime3.ptb.de  iburst
server  ntp1.oma.be  iburst
server  ntp2.oma.be  iburst

pool  pool.ntp.org  iburst

keyfile /etc/chrony/chrony.keys
driftfile /var/lib/chrony/chrony.drift
logdir /var/log/chrony
maxupdateskew 100.0
hwclockfile /etc/adjtime
rtcsync
makestep 1 5
EOF
        sudo service chronyd restart;
    }
}


########################################################################
handle_dhcpcd() {
    echo -e "\033[32mhandle_dhcpcd()\033[0m";

    ####################################################################
    grep -q mod_install_server /etc/dhcpcd.conf || {
        echo -e "\033[36m    setup dhcpcd.conf\033[0m";
        do_backup etc/dhcpcd.conf
        cat << EOF | sudo tee -a /etc/dhcpcd.conf >/dev/null

########################################
## mod_install_server
interface ${INTERFACE_ETH0}
    slaac private
    static ip_address=${IP_ETH0}/24
    static ip6_address=fd80::${IP_ETH0}/120
    static routers=${IP_ETH0_ROUTER}
    static domain_name_servers=${IP_ETH0_ROUTER} 1.1.1.1 2606:4700:4700::1111
EOF
    sudo service dhcpcd restart;
    }
}


########################################################################
handle_dnsmasq() {
    echo -e "\033[32mhandle_dnsmasq()\033[0m";

    ####################################################################
    [ -f /etc/dnsmasq.d/10-pxe-server ] || {
        echo -e "\033[36m    setup dnsmasq for pxe\033[0m";
        do_backup etc/dnsmasq.d/10-pxe-server
        cat << EOF | sudo tee /etc/dnsmasq.d/10-pxe-server >/dev/null
########################################
#/etc/dnsmasq.d/pxeboot
## mod_install_server

log-dhcp
#log-queries

# for local resolve
interface=lo

# interface selection
interface=${INTERFACE_ETH0}

#
bind-dynamic

##########
# TFTP_ETH0 (enabled)
enable-tftp=${INTERFACE_ETH0}
#tftp-lowercase
tftp-root=${DST_TFTP_ETH0}/, ${INTERFACE_ETH0}
dhcp-option=tag:${INTERFACE_ETH0}, option:tftp-server, 0.0.0.0

##########
# Time Server
dhcp-option=tag:${INTERFACE_ETH0}, option:ntp-server, 0.0.0.0
dhcp-option=tag:${INTERFACE_ETH0}, option6:ntp-server, [::]

##########
# DHCP
log-dhcp
#enable-ra

# block NETGEAR managed switch
dhcp-mac=set:block, 28:c6:8e:*:*:*

# static IP
#dhcp-host=set:known_128,  08:08:08:08:08:08, 192.168.1.128,  [fd80::192.168.1.128],  infinite
#dhcp-host=set:known_129,  client_acb,        192.168.1.129,  [fd80::192.168.1.129],  infinite

# dynamic IP
dhcp-range=tag:${INTERFACE_ETH0}, tag:!block, fd80::${IP_ETH0_START}, fd80::${IP_ETH0_END}, 120, 1h
dhcp-range=tag:${INTERFACE_ETH0}, tag:!block, ${IP_ETH0_START}, ${IP_ETH0_END}, 255.255.255.0, 1h

##########
# DNS (enabled)
port=53
#log-queries
dns-loop-detect
stop-dns-rebind
bogus-priv
domain-needed
dhcp-option=tag:${INTERFACE_ETH0}, option:netbios-ns, 0.0.0.0
dhcp-option=tag:${INTERFACE_ETH0}, option:netbios-dd, 0.0.0.0

# PXE (enabled)
# warning: unfortunately, a RPi3 identifies itself as of architecture x86PC (x86PC=0)
dhcp-mac=set:IS_RPI3,B8:27:EB:*:*:*
dhcp-mac=set:IS_RPI4,DC:A6:32:*:*:*
dhcp-match=set:ARCH_0, option:client-arch, 0

# test if it is a RPi or a regular x86PC
tag-if=set:ARM_RPI, tag:ARCH_0, tag:IS_RPI3
tag-if=set:ARM_RPI, tag:IS_RPI4

##########
# RPi 3
pxe-service=tag:IS_RPI3,0, "Raspberry Pi Boot   ", bootcode.bin
dhcp-boot=tag:IS_RPI3, bootcode.bin


##########
# iPXE
dhcp-match=set:iPXE, option:user-class, iPXE
dhcp-match=set:ipxe.priority, 175, 1 #= signed integer 8;
dhcp-match=set:ipxe.keep-san, 175, 8 #= unsigned integer 8;
dhcp-match=set:ipxe.skip-san-boot, 175, 9 #= unsigned integer 8;
dhcp-match=set:ipxe.syslogs, 175, 85 #= string;
dhcp-match=set:ipxe.cert, 175, 91 #= string;
dhcp-match=set:ipxe.privkey, 175, 92 #= string;
dhcp-match=set:ipxe.crosscert, 175, 93 #= string;
dhcp-match=set:ipxe.no-pxedhcp, 175, 176 #= unsigned integer 8;
dhcp-match=set:ipxe.bus-id, 175, 177 #= string;
dhcp-match=set:ipxe.san-filename, 175, 188 #= string;
dhcp-match=set:ipxe.bios-drive, 175, 189 #= unsigned integer 8;
dhcp-match=set:ipxe.username, 175, 190 #= string;
dhcp-match=set:ipxe.password, 175, 191 #= string;
dhcp-match=set:ipxe.reverse-username, 175, 192 #= string;
dhcp-match=set:ipxe.reverse-password, 175, 193 #= string;
dhcp-match=set:ipxe.client-id, 175, 221 #= string;
dhcp-match=set:ipxe.version, 175, 235 #= string;

dhcp-boot=tag:iPXE, tag:!ipxe.keep-san, sanboot.c32
dhcp-boot=tag:iPXE, tag:ipxe.skip-san-boot, boot.php

# Default boot
dhcp-boot=tag:${INTERFACE_ETH0}, tag:!iPXE, ipxe.pxe

# The boot filename, Server name, Server Ip Address
#pxe-service=x86PC, "Boot from network", ipxe.pxe

##########
# TFTP_ETH0
enable-tftp
tftp-root=/var/lib/tftpboot
pxe-prompt="Press F8 for menu.", 3
pxe-service=x86PC, "Boot from network", ipxe.pxe
dhcp-boot=tag:${INTERFACE_ETH0}, tag:!iPXE, undionly.kpxe,${IP_ETH0}

EOF
    sudo service dnsmasq restart;
    }
}


########################################################################
handle_rsync() {
    ####################################################################
    ## rsync
    grep -q mod_install_server /etc/rsyncd.conf || {
        echo -e "\033[36m    setup rsync\033[0m";
        do_backup etc/rsyncd.conf
        cat << EOF | sudo tee /etc/rsyncd.conf >/dev/null
########################################
## mod_install_server
uid = nobody
gid = nogroup
use chroot = yes
max connections = 4
pid file = /var/run/rsyncd.pid
log file = /var/log/rsyncd.log

[pxe-server]
  path = /var/lib/tftpboot
  comment = PXE Server
  read only = no
  list = yes
EOF
        sudo service rsync restart;
    }
}


########################################################################
handle_lighttpd() {
    echo -e "\033[32mhandle_lighttpd()\033[0m";

    ####################################################################
    grep -q mod_install_server /etc/lighttpd/lighttpd.conf || {
        echo -e "\033[36m    setup lighttpd\033[0m";
        do_backup etc/lighttpd/lighttpd.conf
        cat << EOF | sudo tee /etc/lighttpd/lighttpd.conf >/dev/null
########################################
## mod_install_server
server.modules = (
    "mod_access",
    "mod_alias",
    "mod_compress",
    "mod_redirect",
)

server.document-root        = "/var/www/html"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "http"
server.groupname            = "http"
server.port                 = 80

index-file.names            = ( "index.php", "index.html",
                                "index.lighttpd.html" )
url.access-deny             = ( "~", ".inc" )

static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ( "application/javascript", "text/css",
                                "text/html", "text/plain" )

# default listening port for IPv6 falls back to the IPv4 port
server.bind                 = "0.0.0.0"
EOF
        sudo service lighttpd restart;
    }
}


########################################################################
handle_firewall() {
    echo -e "\033[32mhandle_firewall()\033[0m";

    ####################################################################
    echo -e "\033[36m    setup iptables\033[0m";
    do_backup etc/iptables/iptables.rules
    do_backup etc/iptables/ip6tables.rules
    cat << EOF | sudo tee /etc/iptables/iptables.rules >/dev/null
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A INPUT -p udp -m udp --dport 67 -j ACCEPT
-A INPUT -p udp -m udp --dport 69 -j ACCEPT
-A INPUT -p udp -m udp --dport 123 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
EOF

    cat << EOF | sudo tee /etc/iptables/ip6tables.rules >/dev/null
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
-A INPUT -p udp -m udp --dport 67 -j ACCEPT
-A INPUT -p udp -m udp --dport 69 -j ACCEPT
-A INPUT -p udp -m udp --dport 123 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp6-port-unreachable
-A FORWARD -j REJECT --reject-with icmp6-port-unreachable
COMMIT
EOF
    sudo service iptables restart;
    sudo service ip6tables restart;
}


########################################################################
handle_nfs() {
    echo -e "\033[32mhandle_nfs()\033[0m";

    ####################################################################
    grep -q mod_install_server /etc/exports || {
        echo -e "\033[36m    setup NFS\033[0m";
        do_backup etc/exports
        cat << EOF | sudo tee /etc/exports >/dev/null
########################################
## mod_install_server
/var/lib/tftpboot  *(rw,sync,no_root_squash,no_subtree_check)
EOF
        sudo service nfs restart;
    }
}


########################################################################
echo
handle_chrony;
handle_dhcpcd;
handle_dnsmasq;
handle_rsync;
handle_lighttpd;
handle_firewall;
handle_nfs;

########################################################################
. "${script_dir:?}/p2-update"


########################################################################
#sync
#echo -e "\e[32mDone.\e[0m";
echo -e "\e[1;31mPlease reboot\e[0m";
